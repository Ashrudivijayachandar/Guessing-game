import streamlit as st # type: ignore
import random

def portfolio():
    st.title("My Portfolio")
    st.header("About Me")
    st.write("I'm a passionate developer with experience in Python, Streamlit, and other technologies.")
    
    st.header("Projects")
    st.subheader("Project 1: Awesome Project")
    st.write("Description of the project.")
    
    st.subheader("Project 2: Another Great Project")
    st.write("Description of the project.")
    
    # Add more sections as needed

def user_guessing_game():
    st.title("User Guessing Game")
    
    # Instructions
    st.write("Guess the number the computer is thinking of!")
    
    # Set range
    min_range = st.number_input("Enter the minimum range", value=1)
    max_range = st.number_input("Enter the maximum range", value=100)
    
    if min_range >= max_range:
        st.warning("Minimum range should be less than maximum range.")
        return
    
    # Initialize session state variables if not already set
    if 'number' not in st.session_state:
        st.session_state['number'] = random.randint(min_range, max_range)
        st.session_state['attempts'] = 0
    
    if 'number' in st.session_state:
        guess = st.number_input("Enter your guess", value=min_range)
        
        if st.button("Check Guess"):
            st.session_state['attempts'] += 1
            if guess < st.session_state['number']:
                st.write("Too low!")
            elif guess > st.session_state['number']:
                st.write("Too high!")
            else:
                st.write(f"Congratulations! You guessed it right in {st.session_state['attempts']} attempts.")
                del st.session_state['number']  # Reset the game after a correct guess

def machine_guessing_game():
    st.title("Machine Guessing Game")
    
    # Instructions
    st.write("Think of a number, and the computer will try to guess it!")
    
    min_range = st.number_input("Enter the minimum range", value=1)
    max_range = st.number_input("Enter the maximum range", value=100)
    
    if min_range >= max_range:
        st.warning("Minimum range should be less than maximum range.")
        return
    
    # Initialize session state variables if not already set
    if 'low' not in st.session_state or 'high' not in st.session_state:
        st.session_state['low'] = min_range
        st.session_state['high'] = max_range
        st.session_state['attempts'] = 0
    
    if 'low' in st.session_state and 'high' in st.session_state:
        guess = (st.session_state['low'] + st.session_state['high']) // 2
        st.session_state['attempts'] += 1
        st.write(f"Computer guesses: {guess}")
        
        feedback = st.radio(f"Is {guess} your number?", ("Too low", "Too high", "Correct"))
        
        if feedback == "Too low":
            st.session_state['low'] = guess + 1
        elif feedback == "Too high":
            st.session_state['high'] = guess - 1
        else:
            st.write(f"The computer guessed your number in {st.session_state['attempts']} attempts!")
            del st.session_state['low']
            del st.session_state['high']
            return

    if 'low' in st.session_state and 'high' in st.session_state:
        if st.session_state['low'] > st.session_state['high']:
            st.write("The computer couldn't guess your number. Are you sure it's within the range?")

def main():
    st.sidebar.title("Navigation")
    selection = st.sidebar.radio("Go to", ["Portfolio", "User Guessing Game", "Machine Guessing Game"])
    
    if selection == "Portfolio":
        portfolio()
    elif selection == "User Guessing Game":
        user_guessing_game()
    elif selection == "Machine Guessing Game":
        machine_guessing_game()
if __name__ == "__main__":
    main()

